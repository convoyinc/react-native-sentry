{"version":3,"file":"native.test.js","sourceRoot":"","sources":["../../../test/transports/native.test.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAEjE,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,CAAC;IACvC,MAAM,EAAE;QACN,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;KAC3D;CACF,CAAC,CAAC,CAAC;AAEJ,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,IAAI,CAAC,uBAAuB,EAAE,GAAS,EAAE;QACvC,MAAM,SAAS,GAAG,IAAI,eAAe,EAAE,CAAC;QACxC,MAAM,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1E,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { NativeTransport } from \"../../src/js/transports/native\";\n\njest.mock(\"../../src/js/wrapper\", () => ({\n  NATIVE: {\n    sendEvent: jest.fn(() => Promise.resolve({ status: 200 }))\n  }\n}));\n\ndescribe(\"NativeTransport\", () => {\n  test(\"call native sendEvent\", async () => {\n    const transport = new NativeTransport();\n    await expect(transport.sendEvent({})).resolves.toEqual({ status: 200 });\n  });\n});\n"]}